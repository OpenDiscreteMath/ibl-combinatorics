<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="s3-1-distrib-idea" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>The idea of a distribution</title>
  <introduction>
    <p>
      Many of the problems we solved in <xref ref="what-is" /> may be thought of as problems
      of distributing objects (such as pieces of fruit or ping-pong balls) to
      recipients (such as children). Some of the ways of viewing counting
      problems as distribution problems are somewhat indirect. For example, in
      <xref ref="ping-pong">Problem</xref> you probably noticed that the number of ways to pass out
      <m>k</m> ping-pong balls to <m>n</m> children so that no child gets more than one is
      the number of ways that we may choose a
      <m>k</m>-element subset of
      an <m>n</m>-element set. We think of the children as recipients and objects we
      are distributing as the identical ping-pong balls, distributed so that
      each recipient gets at most one ball. Those children who receive an
      object are in our set. It is helpful to have more than one way to think
      of solutions to problems. In the case of distribution problems, another
      popular model for distributions is to think of putting balls in boxes
      rather than distributing objects to recipients. Passing out identical
      objects is modeled by putting identical balls into boxes. Passing out
      distinct objects is modeled by putting distinct balls into boxes.
    </p>
  </introduction>

  <subsection>
    <title>The twentyfold way</title>
    <p>
      When we are passing out objects to recipients, we may think of the
      objects as being either identical or distinct. We may also think of the
      recipients as being either identical (as in the case of putting fruit
      into plastic bags in the grocery store) or distinct (as in the case of
      passing fruit out to children). We may restrict the distributions to
      those that give at least one object to each recipient, or those that give
      exactly one object to each recipient, or those that give at most one
      object to each recipient, or we may have no such restrictions. If the
      objects are distinct, it may be that the order in which the objects are
      received is relevant (think about putting books onto the shelves in a
      bookcase) or that the order in which the objects are received is
      irrelevant (think about dropping a handful of candy into a child's trick
      or treat bag). If we ignore the possibility that the order in which
      objects are received matters, we have created
      <m>2\cdot2\cdot4=16</m> distribution problems. In the cases where a recipient
      can receive more than one distinct object, we also have four more
      problems when the order objects are received matters. Thus we have 20
      possible distribution problems.
    </p>

    <table xml:id="firstdistributiontable" >
      <caption>An incomplete table of the number of ways to
      distribute <m>k</m> objects to <m>n</m> recipients, with
      restrictions on how the objects are
      received</caption>

      <tabular top="major" left="major" right="major" >
        <col right="major"/>
        <col halign="center" right="minor" />
        <col halign="center"/>
        <row bottom="major">
            <cell colspan="3" halign="center">The Twentyfold Way: A Table of Distribution
            Problems</cell>
        </row>
        <row>
            <cell >
                <line><m>k</m> objects and conditions</line>
                <line>on how they are received</line>
            </cell>
            <cell colspan="2" halign="center" bottom="minor">
                <line><m>n</m> recipients and mathematical</line>
                <line>model for distribution</line>
            </cell>
        </row>
        <row bottom="major">
            <cell></cell>
            <cell halign="center">Distinct</cell>
            <cell halign="center">Identical</cell>
        </row>
        <row bottom="minor">
            <cell>
                <line>1.  Distinct</line>
                <line>no conditions</line>
            </cell>
            <cell>
                <line><m>n^k</m></line>
                <line>functions</line>
            </cell>
            <cell>
                <line>?</line>
                <line>set partitions (<m>\le n</m> parts)</line>
            </cell>
        </row>
        <row bottom="minor">
            <cell>
                <line>2.  Distinct</line>
                <line>Each gets at most one</line>
            </cell>
            <cell>
                <line><m>n^{\underline{k}}</m></line>
                <line><m>k</m>-element</line>
                <line>permutations</line>
            </cell>
            <cell>
                <line>1 if <m>k\le n</m>;</line>
                <line>0 otherwise</line>
            </cell>
        </row>
        <row bottom="minor">
            <cell>
                <line>3.  Distinct</line>
                <line>Each gets at least one</line>
            </cell>
            <cell>
                <line><m>?</m></line>
                <line>onto functions</line>
            </cell>
            <cell>
                <line><m>?</m></line>
                <line>set partitions (<m>n</m> parts)</line>
            </cell>
        </row>
        <row bottom="minor">
            <cell>
                <line>4. Distinct</line>
                <line>Each gets exactly one</line>
            </cell>
            <cell>
                <line><m>k!=n!</m></line>
                <line>permutations</line>
            </cell>
            <cell>
                <line>1 if <m>k=n</m>;</line>
                <line>0 otherwise</line>
            </cell>
        </row>
        <row valign="top" bottom="minor">
            <cell><line>5.  Distinct,</line><line> order matters</line></cell>
            <cell>
                <line>?</line>
                <line>?</line>
            </cell>
            <cell>
                <line>?</line>
                <line>?</line>
            </cell>
        </row>
        <row valign="top" bottom="minor">
            <cell>
                <line>6.  Distinct,</line>
                <line>order matters</line>
                <line>Each gets at least one</line>
            </cell>
            <cell>
                <line>?</line>
                <line>?</line>
            </cell>
            <cell>
                <line>?</line>
                <line>?</line>
            </cell>
        </row>
        <row valign="top" bottom="minor">
            <cell>
                <line>7.  Identical</line>
                <line>no conditions</line>
            </cell>
            <cell>
                <line>?</line>
                <line>?</line>
            </cell>
            <cell>
                <line>?</line>
                <line>?</line>
            </cell>
        </row>
        <row bottom="minor" valign="top">
            <cell>
                <line>8.  Identical</line>
                <line>Each gets at most one</line>
            </cell>
            <cell>
                <line><m>\binom{n}{k}</m></line>
                <line>subsets</line>
            </cell>
            <cell>
                <line>1 if <m>k\le n</m>;</line>
                <line>0 otherwise</line>
            </cell>
        </row>
        <row bottom="minor" valign="top">
            <cell>
                <line>9.  Identical</line>
                <line>Each gets at least one</line>
            </cell>
            <cell>
                <line>?</line>
                <line>?</line>
            </cell>
            <cell>
                <line>?</line>
                <line>?</line>
            </cell>
        </row>
        <row bottom="major" valign="top">
            <cell>
                <line>10.  Identical</line>
                <line>Each gets exactly one</line>
            </cell>
            <cell>
                <line>1 if <m>k=n</m>;</line>
                <line>0 otherwise</line>
            </cell>
            <cell>
                <line>1 if <m>k=n</m>;</line>
                <line>0 otherwise</line>
            </cell>
        </row>
      </tabular>
    </table>

    <p>
      We describe these problems in <xref ref="firstdistributiontable" />. Since there are twenty possible distribution problems, we call the table the <q>Twentyfold Way,</q><idx><h>Twentyfold Way</h></idx> adapting terminology suggested by Joel Spencer for a more restricted class of distribution problems. In the first column of the table we state whether the objects are distinct (like people) or identical (like ping-pong balls) and then give any conditions on how the objects may be received. The conditions we consider are whether each recipient gets at most one object, whether each recipient gets at least one object, whether each recipient gets exactly one object, and whether the order in which the objects are received matters. In the second column we give the solution to the problem and the name of the mathematical model for this kind of distribution problem when the recipients are distinct, and in the third column we give the same information when the recipients are identical. We use question marks as the answers to problems we have not yet solved and models we have not yet studied. We give explicit answers to problems we solved in <xref ref="what-is" /> and problems whose answers are immediate. The goal of this chapter is to develop methods that will allow us to fill in the table with formulas or at least quantities we know how to compute, and we will give a completed table at the end of the chapter. We will now justify the answers that are not question marks and replace some question marks with answers as we cover relevant material.
    </p>

    <p>
      If we pass out <m>k</m> distinct objects (say pieces of fruit) to <m>n</m> distinct
      recipients (say children), we are saying for each object which recipient
      it goes to. Thus we are defining a function from the set of objects to
      the recipients. We saw the following theorem in <xref ref="numberoffunctionsconjecture">Problem</xref>.
    </p>

    <theorem>
      <statement>
        <p>
          There are
          <m>n^k</m><idx><h>functions</h><h>number of</h></idx> functions from a
          <m>k</m>-element set to an <m>n</m>-element set.
        </p>
      </statement>
    </theorem>

    <p>
      We proved it in <xref ref="numberoffunctionsconjecture">Problem</xref> and in another way in <xref ref="altproofnumberoffunctionsconjecture"/>. If we pass out <m>k</m> distinct
      objects (say pieces of fruit) to <m>n</m> indistinguishable recipients (say
      identical paper bags) then we are dividing the objects up into
      disjoint sets; that is we are forming a partition of the objects into
      some number, certainly no more than the number <m>k</m> of objects, of parts.
      Later in this chapter (and again in the next chapter) we shall discuss
      how to compute the number of partitions of a
      <m>k</m>-element set into
      <m>n</m> parts. This explains the entries in row one of our table.
    </p>

    <p>
      If we pass out <m>k</m> distinct objects to <m>n</m> recipients so that each gets
      at most one, we still determine a function, but the function must be
      one-to-one. The number of one-to-one functions from a <m>k</m>-element set to
      an <m>n</m> element set is the same as the number of one-to-one functions
      from the set <m>[k] =\{1,2,\ldots,k\}</m> to an <m>n</m>-element set. In <xref ref="kelementpermutation">Problem</xref> we proved the following theorem.
    </p>

    <theorem xml:id="numberofinjections">
      <statement>
        <p>
          If <m>0\le k\le n</m>, then the number of
          <m>k</m>-element permutations of an <m>n</m>-element set is
          <me>
            n^{\underline{k}} = n(n-1)\cdots(n-k+1) =
            n!/(n-k)!.
          </me>
        </p>

        <p>
          <idx><h>functions</h><h>one-to-one!number
          of</h></idx>
        </p>
      </statement>
    </theorem>

    <p>
      If <m>k>n</m> there are no one-to-one functions from a <m>k</m> element set to an
      <m>n</m> element, so we define <m>n^{\underline{k}}</m> to be zero in this case.
      Notice that this is what the indicated product in the middle term of our
      formula gives us. If we are supposed to distribute
      <m>k</m> distinct objects to
      <m>n</m> identical recipients so that each gets at most one, we cannot do so
      if <m>k>n</m>, so there are 0 ways to do so. On the other hand, if <m>k\le n</m>,
      then it doesn't matter which recipient gets which object, so there is
      only one way to do so. This explains the entries in row two of our table.
    </p>

    <p>
      If we distribute <m>k</m> distinct objects to <m>n</m> distinct recipients so that
      each recipient gets at least one, then we are counting functions again,
      but this time functions from a <m>k</m>-element set <em>onto</em> an <m>n</m>-element
      set. At present we do not know how to compute the number of such
      functions, but we will discuss how to do so later in this chapter and in
      the next chapter. If we distribute <m>k</m> identical objects to <m>n</m>
      recipients, we are again simply partitioning the objects, but the
      condition that each recipient gets at least one means that we are
      partitioning the objects into exactly <m>n</m> blocks. Again, we will discuss
      how compute the number of ways of partitioning a set of <m>k</m> objects into
      <m>n</m> blocks later in this chapter. This explains the entries in row three
      of our table.
    </p>

    <p>
      If we pass out <m>k</m> distinct objects to <m>n</m> recipients so that each gets
      exactly one, then <m>k=n</m> and the function that our distribution gives us
      is a bijection. The number of bijections from an <m>n</m>-element set to an
      <m>n</m>-element set is <m>n!</m> by <xref ref="numberofinjections">Theorem</xref>. If we pass
      out <m>k</m> distinct objects of <m>n</m> identical recipients so that each gets
      exactly 1, then in this case it doesn't matter which recipient gets which
      object, so the number of ways to do so is 1 if <m>k=n</m>. If <m>k\not=n</m>, then
      the number of such distributions is zero. This explains the entries in
      row four of our table.
    </p>

    <p>
      We now jump to row eight of our table. We saw in <xref ref="ping-pong">Problem</xref> that the number of ways to pass out <m>k</m> identical
      ping-pong balls to <m>n</m> children is simply the number of <m>k</m>-element
      subsets of an <m>n</m>-element set. In <xref ref="formulanchoosek">Problem</xref> we proved
      the following theorem.
    </p>

    <theorem>
      <statement>
        <p>
          If <m>0\le k \le n</m>, the number of <m>k</m>-element subsets of
          an
          <m>n</m>-element set is given by
          <me>
            \binom{n}{k} = \frac{n^{\underline{k}}}{k!}
            = \frac{n!}{k!(n-k)!}.
          </me>
        </p>
      </statement>
    </theorem>

    <p>
      We define <m>\binom{n}{k}</m> to be 0 if <m>k>n</m>, because then there are no
      <m>k</m>-element subsets of an <m>n</m>-element set. Notice that this is what the
      middle term of the formula in the theorem gives us. This explains the
      entries of row 8 of our table. For now we jump over row 9.
    </p>

    <p>
      In row 10 of our table, if we are passing out <m>k</m> identical objects to
      <m>n</m> recipients so that each gets exactly one, it doesn't matter whether
      the recipients are identical or not; there is only one way to pass out
      the objects if <m>k=n</m> and otherwise it is impossible to make the
      distribution, so there are no ways of distributing the objects. This
      explains the entries of row 10 of our table. Several other rows of our
      table can be computed using the methods of <xref ref="what-is" />.
    </p>
  </subsection>

  <subsection xml:id="orderedfunctionsection">
    <title>Ordered functions</title>
    <activity xml:id="bookcase" category="essential and interesting">
        <introduction>
            <p> Suppose we wish to place <m>k</m> distinct books onto the shelves
          of a bookcase with <m>n</m> shelves. For simplicity, assume for now
          that all of the books would fit on any of the shelves. Also, let's
          imagine pushing the books on a shelf as far to the left as we can, so
          that we are only thinking about how the books sit relative to each
          other, not about the exact places where we put the books. Since the
          books are distinct, we can think of a the first book, the second book
          and so on. </p>
        </introduction>
        <task>
          <statement>
            <p>How many places are there where we can place the first book? </p>
          </statement>
          <solution>
            <p>
              There are <m>n</m> places where we can place the first book.
            </p>
          </solution>

        </task>

        <task>
          <statement>
            <p>When we place the second book, if we decide to place it on the shelf that already has a book, does it matter if we place it to the left or right of the book that is already there?
            </p>
          </statement>
          <solution>
            <p>
              Yes.
            </p>
          </solution>
        </task>


        <task>
          <statement>
            <p>
              How many places are there where we can place the second book?
            </p>
          </statement>
          <hint>
            <p>
          If you decide to put it on a shelf that already has a book, you have
          two choices of where to put it on that shelf.
            </p>
          </hint>
          <solution>
            <p>
              Once we have placed it, there are <m>n+1</m> places where we can
              place the second book, because on the shelf that has one book, we
              could put the second book to the left or to the right of the book
              already there.
            </p>
          </solution>
        </task>

        <task>
          <statement>
            <p>
              Once we have <m>i-1</m> books placed, if we want to place book <m>i</m>  on a shelf that already has some books, is sliding it in to the left of all the books already there different from placing it to the right of all the books already or between two books already there?

            </p>
          </statement>
          <solution>
            <p>
              All of these are different.
            </p>
          </solution>
        </task>

        <task>
          <statement>
            <p>
              In how many ways may we place the <m>i</m>th book into the bookcase?
            </p>
          </statement>
          <hint>
            <p>
          Among all the places you could put books, on all the shelves, how many are to the immediate left of some book? How many other places are there?
            </p>
          </hint>
          <solution>
            <p>
              Once we have <m>i-1</m> books on the shelves the <m>i</m>th book could go on any shelf to the left of all books there, if any, giving us <m>n</m> places, or it could go to the immediate right of any book already there, giving us another <m>i-1</m> places. Thus there are <m>n+i-1</m> places where we could place book  <m>i</m>.
            </p>
          </solution>
        </task>

        <task>
          <statement>
            <p>
              In how many ways may we place all the books?

            </p>
          </statement>
          <solution>
            <p>
              From this, we can see that the number of ways to place all the books is
              <me>
                \prod_{i=1}^k (n+i-1).
              </me>
            </p>
          </solution>
        </task>


      </activity>



      <activity xml:id="bookcaseeveryshelf">
        <statement>
          <p>
            Suppose we wish to place the books in <xref ref="bookcase">Problem</xref>
            (satisfying the assumptions we made there) so that each shelf gets at
            least one book. Now in how many ways may we place the books? (Hint: how
            can you make sure that each shelf gets at least one book before you start
            the process described in <xref ref="bookcase">Problem</xref>?)
          </p>
        </statement>
        <hint>
          <p>
        How can you make sure that each shelf gets at least one book before you
        start the process described in <xref ref="bookcase">Problem</xref>?
          </p>
        </hint>
        <solution>
          <p>
            Choose <m>n</m> books from the <m>k</m> books in <m>\binom{k}{n}</m>
            ways, and assign them to the <m>n</m> places shelves in <m>n!</m>
            ways, giving us <m>k!/(k-n)!</m> ways to put a book on each shelf.
            Now leaving these books at the far left of each shelf, place the
            remaining books in
            <me>
              \prod_{i=1}^{k-n}
              (n+i-1)=\frac{(n+(k-n)-1)!}{(n-1)!}=\frac{(k-1)!}{(n-1)!}
            </me>
            ways. Thus we have
            <me>
              \frac{k!(k-1)!}{(k-n)!(n-1)!}=k!\binom{k-1}{n-1}
            </me>
            ways to place the books. Of course the right hand side of that
            equation cries out for a combinatorial explanation. Here it is.
            Imagine lining up the <m>k</m> books in a row. Then there are
            <m>k-1</m> places in between them. Choose <m>n-1</m> of these
            places, and slide a piece of paper in there as a divider. Now put
            the books before the first divider on shelf one, and the books after
            divider <m>i</m> on shelf <m>i+1</m>. This gives an arrangement of
            the books on the shelves so that every shelf has a book!
          </p>
        </solution>
    </activity>

    <p>
      The assignment of which books go to which shelves of a bookcase is simply a function from the books to the shelves. But a function doesn't determine which book sits to the left of which others on the shelf, and this information is part of how the books are arranged on the shelves. In other words, the order in which the shelves receive their books matters.  Our function must thus assign an ordered list of books to each shelf. We will call such a function an ordered function.
      More precisely, an <term>ordered function</term><idx><h>ordered function</h></idx><idx><h>function</h><h>ordered</h></idx> from a set <m>S</m> to a set <m>T</m> is a function that assigns an (ordered) list of elements of <m>S</m> to some, but not necessarily all, elements of <m>T</m> in such a way that each element of <m>S</m> appears on one and only one of the lists.<fn>The phrase ordered function is not a standard one, because there is as yet no standard name for the result of an ordered distribution problem.</fn>
      (Notice that although it is not the usual definition of a function from <m>S</m> to <m>T</m>, a function<idx><h>function</h><h>alternate definition</h></idx> can be described as an assignment of subsets of <m>S</m> to some, but not necessarily all, elements of <m>T</m> so that each element of <m>S</m> is in one and only one of these subsets.) Thus the number of ways to place the books into the bookcase is the entry in the middle column of row 5 of our table. If in addition we require each shelf to get at least one book, we are discussing the entry in the middle column of row 6 of our table.
      An <term>ordered onto function</term><idx><h>function</h><h>ordered!onto</h></idx><idx><h>ordered onto function</h></idx><idx><h>onto function</h><h>ordered</h></idx> is one which assigns a list to each element of <m>T</m>.
      In <xref ref="bookcase">Problem</xref> you showed that the number of ordered functions from a <m>k</m>-element set to an <m>n</m>-element set is <m>\displaystyle \prod_{i=1}^k (n+i-1)</m>. This product occurs frequently enough that it has a name; it is called the <m>k</m>\/th <term>rising factorial power</term><idx><h>factorial power</h><h>rising</h></idx><idx><h>rising factorial power</h></idx> of <m>n</m> and is denoted by <m>n^{\overline{k}}</m>.
      <idx><h><m>n^{\overline{k}}</m></h></idx> It is read as ``<m>n</m> to the <m>k</m> rising.''
      (This notation is due to Don Knuth, who also suggested the notation for falling factorial powers.)<idx><h>factorial</h></idx> We can summarize with a theorem that adds two more formulas for the number of ordered functions.<idx><h>factorial</h><h>falling</h></idx><idx><h>falling factorial power</h></idx>
    </p>

    <theorem>
      <statement>
        <p>
          The number of ordered functions from a <m>k</m>-element set to
          an <m>n</m>-element set is
          <me>
            n^{\overline{k}}=\prod_{i=1}^k (n+i-1) = \frac{(n+i-1)!}{(n-1)!} =
            (n+k-1)^{\underline{k}}.
          </me>
        </p>
      </statement>
    </theorem>
    <p>
      Ordered functions explain the entries in the middle column of rows 5 and 6 of our table of distribution problems.
    </p>
  </subsection>




  <subsection>
    <title>Multisets</title>
    <p>
      In the middle column of row 7 of our table, we are asking for the number
      of ways to distribute <m>k</m> identical objects (say ping-pong balls) to <m>n</m>
      distinct recipients (say children).
    </p>

    <activity xml:id="identicalbooks" category="essential">
      <statement>
        <p>
          In how many ways may we distribute <m>k</m> identical books on the
          shelves of a bookcase with <m>n</m> shelves, assuming that any shelf can hold
          all the books?
        </p>
      </statement>
      <hint>
        <p>
      What is the relationship between the number of ways to distribute identical books and the number of ways to distribute distinct books?
        </p>
      </hint>
      <solution>
        <p>
          We saw that we could arrange <m>k</m> distinct books on <m>n</m> shelves in <m>\prod_{i=1}^k (n+i-1)</m> ways. We partition these arrangements into blocks by putting two arrangements in the same block if we can get one from the other by permuting the books among themselves. Then the number of blocks is the number of ways to place identical books on the shelves. However, there are <m>k!</m> arrangements per block, so there are
          <me>
            \frac{\prod_{i=1}^k (n+i-1)}{k!}=\frac{(n+k-1)^{\underline{k}}}{k!} = \binom{n+k-1}{k}
          </me>
          ways to arrange identical books.
        </p>
      </solution>
    </activity>

    <activity xml:id="multiset" category="essential">
      <statement>
        <p>
          A <term>multiset</term><idx><h>multiset</h></idx> chosen from a set <m>S</m> may be thought of as a subset with repeated elements allowed. For example the multiset of letters of the word Mississippi is <m>\{i,i,i,i,m,p,p,s,s,s,s\}</m>. To determine a multiset we must say how many times (including, perhaps, zero) each member of <m>S</m> appears in the multiset. The number of times an element appears is called its <term>multiplicity</term>.<idx><h>multiplicity in a multiset</h></idx> The size of a multiset chosen from <m>S</m> is the total number of times any member of <m>S</m> appears. For example, the size of the multiset of letters of Mississippi is 11. What is the number of multisets of size <m>k</m> that can be chosen from an <m>n</m>-element set?
        </p>
      </statement>
      <hint>
        <p>
          Look for a relationship between a multiset of shelves and a way of distributing identical books to shelves
        </p>
      </hint>
      <solution>
        <p>
          There is a bijection between arrangements of identical books on
          <m>n</m> shelves and multisets chosen from an <m>n</m>-element set:
          the multiplicity of element <m>i</m> is the number of books on shelf
          <m>i</m>. Thus we have <m>\binom{n+k-1}{k}</m> ways to choose a
          <m>k</m>-element multiset from an <m>n</m>-element set by <xref ref="identicalbooks">Problem</xref>.
        </p>
      </solution>
    </activity>

    <activity category="interesting">
        <statement>
          <p>
            Your answer in the previous problem should be expressible as a
            binomial coefficient. Since a binomial coefficient counts subsets,
            find a bijection between subsets of something and multisets chosen
            from a set <m>S</m>.
          </p>
        </statement>
        <hint>
          <p>
            Note that <m>\binom{n+k-1}{k} = \binom{n+k-1}{n-1}</m>. So we have to figure out how choosing either <m>k</m> elements or <m>n - 1</m> elements out of <m>n + k - 1</m> elements constitutes the choice
        of a multiset. We really have no idea what set of <m>n + k - 1</m> objects to use, so why not use <m>[n + k - 1]</m>? If we choose <m>n - 1</m> of these objects, there are <m>k</m> left over, the same number as the number of elements of our multiset.
        Since our multiset is supposed to be chosen from an <m>n</m>-element set, perhaps we should let the <m>n</m>-element set be <m>[n]</m>. From our choice of <m>n - 1</m> numbers, we have to decide on the multiplicity of 1 through <m>n</m>. For example with <m>n = 4</m> and <m>k = 6</m>, we have <m>n+k-1=9</m>. Here, shown with underlines, is a selection of <m>3=n-1</m> elements from <m>[9]</m>: <m>1, 2, \underline{3}, 4 \underline{5}, 6, 7, \underline{8}, 9</m>.
        How do the underlined elements give us a multiset of size 6 chosen from
        an [4]-element set? In this case, 1 has multiplicity 2, 2 has
        multiplicity 1, 3 has multiplicity 2, and 4 has multiplicity 1.
          </p>
        </hint>
        <solution>
          <p>
            Note that <m>\binom{n+k-1}{k} = \binom{n+k-1}{n-1}</m>. We will show a bijection between ways of choosing <m>n-1</m> things our of <m>n+k-1</m> things and multisets. Namely, take <m>n+k-1</m> objects and line them up in a row. Choose <m>n-1</m> of them. Now let the multiplicity of element 1 of our multiset be the number of objects before the first thing we chose.  if <m>1\lt i\lt n</m>, let the multiplicity of element <m>i</m> of our multiset be the number of things between the <m>i-1</m>th thing we chose and the <m>i</m>th thing we choose. Let the multiplicity of the <m>n</m>th element of our multiset be the number of objects after the last one we chose. Another way to say the essentially same thing is to make a list of <m>n+k-1</m> blank spaces. We choose <m>k</m> of them in which we put ones and <m>n-1</m> of them in which we put plus signs. Then the multiplicity of element 1 is the number of ones before the first plus sign, the multiplicity of element <m>n</m> is the number of ones after the last plus sign and if <m>1\lt i\lt n</m>, the multiplicity of element <m>i</m> is the number of ones between the <m>(i-1)</m>th plus sign and the <m>i</m>th plus sign.
          </p>
        </solution>
      </activity>
      <activity>
        <statement>
          <p>
            How many solutions are there in nonnegative integers to the equation <m>x_1+x_2+ \cdots +x_m = r</m>, where <m>m</m> and <m>r</m> are constants?
          </p>
        </statement>
        <hint>
          <p>
        A solution to the equations assigns a nonnegative number to each of <m>1,2,\ldots, m</m> so that the nonnegative numbers add to <m>r</m>. Does such an assignment have a combinatorial meaning?
          </p>
        </hint>
        <solution>
          <p>
            We can think of <m>x_i</m> as the multiplicity of element <m>i</m> of a multiset chosen from among <m>m</m> things. The total number of elements of the multiset will be <m>r</m>. Thus we have <m>\binom{m+r-1}{r}</m> solutions.
          </p>
        </solution>
    </activity>

    <activity xml:id="k-obj-n-recip">
      <statement>
        <p>
          In how many ways can we distribute <m>k</m> identical objects to <m>n</m> distinct recipients so that each recipient gets at least <m>m</m>?
        </p>
      </statement>
      <hint>
        <p>
      Can you think of some way of guaranteeing that each recipient gets <m>m</m> objects (assuming <m>k \ge mn</m>) right at the beginning of the process of passing the objects out?
        </p>
      </hint>
      <solution>
        <p>
            First give each recipient <m>m</m> objects.  This leaves <m>k-mn</m> identical objects to be distributed among <m>n</m> recipients, so we may do this in the number of ways to choose a (<m>k-mn</m>)-element multiset from <m>n</m> things.  This is <m>\binom{n+k-mn+1}{k-mn}</m>, or <m>\binom{k-(m-1)n+1}{n+1}</m>.
        </p>
      </solution>

    </activity>


    <!-- <p>
      A more precise definition of a <term>multiset</term><idx><h>multiset</h></idx> chosen from a set <m>S</m> is that it is a function <m>m</m>, called a <term>multiplicity function</term><idx><h>multiplicity function</h></idx>, from <m>S</m> to the nonnegative integers. For each <m>x</m> in <m>S</m>, <m>m(x)</m> specifies how many times <m>x</m> appears in the multiset. In our example of the word Mississippi above, our set <m>S</m> can be taken to be the set of alphabet letters and the multiplicity function <m>m</m> is given by <m>m({ i})=4</m>, <m>m({ m}) =1</m>, <m>m({ p})=2</m>, <m>m({ s}) =4</m>, and <m>m</m> of any other member of <m>S</m> is 0. When we list the members of a multiset in braces, it will be clear from context that we are thinking of a multiset. However when we use braces in another way, it may not be clear what we mean. For example, when we write
      <me>
        \{x|x \mbox{~is a letter of Mississippi} \},
      </me>
      do we mean the set <m>\{i,m,p,s\}</m> or the multiset
      <m>\{i,i,i,i,m,p,p,s,s,s,s\}</m>? To resolve this, whenever it is not clear
      from context whether we are talking about a set or multiset we will use
      the subscript multi on the right brace enclosing the multiset to
      distinguish a multiset. Thus we write
      <me>
        \{x|x \mbox{\ is a letter of
        Mississippi} \}_{\mbox{\scriptsize multi} }=\{i,i,i,i,m,p,p,s,s,s,s\}.
      </me>
    </p>

    <p>
      In this case it is probably clear from the right-hand side of the equation
      that we are thinking of the left-hand side as a multiset, but we will
      always try to err in the direction of clarity rather than brevity.
    </p>

    <p>
      The sequence of problems you just completed should explain the entry in the middle column of row 7 of our table of distribution problems. In the next two sections we will give ways of computing the remaining entries.
    </p> -->

    <p>
      Multisets explain the entry in the middle column of row 7 of our table of distribution problems.
    </p>
  </subsection>



  <subsection>
    <title>Compositions of integers</title>
    <activity category="essential for this or the next section">
      <statement>
        <p>
          In how many ways may we put <m>k</m> identical books onto <m>n</m>
          shelves if each shelf must get at least one book?
        </p>
      </statement>
      <hint>
        <p>
      We already know how to place k distinct books onto n distinct shelves so
      that each shelf gets at least one. Suppose we replace the distinct books
      with identical ones. If we permute the distinct books before replacement,
      does that affect the final outcome? There are other ways to solve this problem.
        </p>
      </hint>
      <solution>
        <p>
          In <xref ref="bookcaseeveryshelf">problem</xref> we showed that with
          <m>k</m> distinct books we could place the books in
          <m>k!\binom{k-1}{n-1}</m> ways. We can partition these arangements of
          distinct books into blocks, where each block consists of all
          arrangements that we get just by permuting the books among themselves.
          Thus each block has <m>k!</m> arrangements in it, and each arrangement
          corresponds to an arrangement of identical books. Thus there are <m>\binom{k-1}{n-1}</m> ways to arrange identical books.
        </p>
      </solution>
    </activity>

    <activity xml:id="compositionagian" category="essential for this or the next section">
      <statement>
        <p>
          A <term>composition</term> of the integer <m>k</m> into <m>n</m> parts is a list of <m>n</m> positive integers that add to <m>k</m>.  How many compositions are there of an integer <m>k</m> into <m>n</m> parts?
        </p>
      </statement>
      <hint>
        <p>
      Do you see a relationship between compositions and something else we have
      counted already?
        </p>
      </hint>
      <solution>
        <p>There is a bijection between compositions of <m>k</m> into <m>n</m> parts and arrangements of <m>k</m> identical books on <m>n</m> shelves so that each shelf gets a book. Namely, the number of books on shelf <m>i</m> is the <m>i</m>th element of the list. Thus the number of compositions of <m>k</m> into <m>n</m> parts is <m>\binom{k-1}{n-1}</m>.
        </p>
      </solution>
    </activity>

    <activity category="interesting">
      <statement>
        <p>Your answer in <xref ref="compositionagian">Problem</xref> can be expressed as a binomial coefficient. This means it should be possible to interpret a composition as a subset of some set. Find a bijection between compositions of <m>k</m> into <m>n</m> parts and certain subsets of some set.  Explain explicitly how to get the composition from the subset and the subset from the composition.
        </p>
      </statement>
      <hint>
        <p>
          If we line up <m>k</m> identical books, how many adjacencies are there in between books?
        </p>
      </hint>
      <solution>
        <p>If we line up <m>k</m> identical books, there are <m>k-1</m> places in between two books. If we choose <m>n-1</m> of these places and slip dividers into those places, then we have a first clump of books, a second clump of books, and so on. The <m>i</m>th element of our list is the number of books in the <m>i</m>th clump. Clearly using books is irrelevant; we could line up any <m>k</m> identical objects and make the same argument. Our bijection is between compositions and <m>(n-1)</m>-element subsets of the set of <m>k-1</m> spaces between our objects.
        </p>
      </solution>
    </activity>

    <activity category="essential for this or the next section">
      <statement>
        <p>
          Explain the connection between compositions of <m>k</m> into <m>n</m>
          parts and the problem of distributing <m>k</m> identical objects to
          <m>n</m> recipients so that each recipient gets at least one.
        </p>
      </statement>
      <solution>
        <p>
          Since the recipients are distinct, we can think of them as a first
          recipient, a second, and so on. Given a composition of <m>k</m> into
          <m>n</m> parts, let the <m>i</m>th element of the list be the number
          of objects given to recipient number <m>i</m>.
        </p>
      </solution>
    </activity>

    <p>
      The sequence of problems you just completed should explain the entry in
      the middle column of row 9 of our table of distribution problems.
    </p>
  </subsection>




  <subsection>
    <title>Broken permutations and Lah numbers</title>
    <activity xml:id="brokenpermutation" category="essential for this or the next section, and interesting">
      <statement>
        <p>
          In how many ways may we stack <m>k</m> distinct books into <m>n</m> identical boxes so that there is a stack in every box? The hints may suggest that you can do this problem in more than one way!
        </p>
      </statement>
      <hint>
          <p>Imagine taking a stack of <m>k</m> books, and breaking it up into stacks to put into the boxes in the same order they were originally stacked. If you are going to use <m>n</m> boxes, in how many places will you have to break the stack up into smaller stacks, and how many ways can you do this?
          </p>
      </hint>
      <hint>
          <p>
              How many different bookcase arrangements correspond to the same way of stacking <m>k</m> books into <m>n</m> boxes so that each box has at least one book?
          </p>
      </hint>
      <solution>
        <p>
          We can make a list of the <m>k</m> distinct books in <m>k!</m> ways.
          Then we have to choose <m>n-1</m> of the <m>k-1</m> places between the lists as the
          places where we will break the list. However the order in which we
          list the boxes is irrelevant, so we have equivalence classes of <m>n!</m>
          arrangements for each way of putting the books into boxes. Thus we can
          put the books in boxes in
          <m>k!\binom{k-1}{n-1}/n!</m> ways.
        </p>

        <p>
          Alternately, we can take the number of ways to put <m>k</m> books onto <m>n</m>
          bookshelves so that each shelf gets at least one, and then divide by the
          number of shelves factorial. That gives us <m>k!\binom{k-1}{n-1}/n!</m> ways
          to arrange the books.
        </p>
      </solution>
    </activity>

    <p>
      We can think of stacking books into identical boxes as partitioning the
      books and then ordering the blocks of the partition. This turns out not
      to be a useful computational way of visualizing the problem because the
      number of ways to order the books in the various stacks depends on the
      sizes of the stacks and not just the number of stacks. However this way
      of thinking actually led to the first hint in <xref ref="brokenpermutation">Problem</xref>. Instead of dividing a set up into
      nonoverlapping parts, we may think of dividing a <em>permutation</em>
      (thought of as a list) of our <m>k</m> objects up into <m>n</m> ordered blocks. We
      will say that a set of ordered lists of elements of a set <m>S</m> is a <term>broken permutation</term><idx><h>broken permutation</h></idx><idx><h>permutation</h><h>broken</h></idx>
      of <m>S</m> if each element of <m>S</m> is in one and only one of these
      lists.<fn>The phrase broken permutation is not standard,
      because there is no standard name for the solution to this kind  of
      distribution problem.</fn> The number of broken permutations of a
      <m>k</m>-element set with
      <m>n</m> blocks is denoted by <m>L(k,n)</m>. The number <m>L(k,n)</m> is called a
      <term>Lah Number</term> and, from our solution to <xref ref="brokenpermutation">Problem</xref>, is equal to <m>k!\binom{k-1}{n-1}/n!</m>.<idx><h>Lah
      number</h></idx>
    </p>

    <p>
      The Lah numbers are the solution to the question ``In how many ways may we
      distribute <m>k</m> distinct objects to <m>n</m> identical recipients if order
      matters and each recipient must get at least one?" Thus they give the
      entry in row 6 and column 3 of our table. The entry in row 5 and column
      3 of our table will be the number of broken permutations with less than
      or equal to <m>n</m> parts. Thus it is a sum of Lah numbers.
    </p>

    <p>
      We have seen that ordered functions and broken permutations explain the
      entries in rows 5 and 6 of our table.
    </p>

    <p>
      In the next two sections we will give ways of computing the remaining entries.
    </p>
  </subsection>
</section>
